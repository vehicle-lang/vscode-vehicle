>@network
#^^^^^^^^ source.vehicle keyword.other.declaration.network.vehicle
>f : Vector Rat 1 -> Vector Rat 1
#^^ source.vehicle
#  ^ source.vehicle keyword.operator.colon.vehicle
#   ^ source.vehicle
#    ^^^^^^ source.vehicle support.type.vector.vehicle
#          ^ source.vehicle
#           ^^^ source.vehicle support.type.rat.vehicle
#              ^ source.vehicle
#               ^ source.vehicle constant.numeric.integral.decimal.vehicle
#                ^ source.vehicle
#                 ^^ source.vehicle keyword.operator.arrow.vehicle
#                   ^ source.vehicle
#                    ^^^^^^ source.vehicle support.type.vector.vehicle
#                          ^ source.vehicle
#                           ^^^ source.vehicle support.type.rat.vehicle
#                              ^ source.vehicle
#                               ^ source.vehicle constant.numeric.integral.decimal.vehicle
>
>@property
#^^^^^^^^^ source.vehicle keyword.other.declaration.property.vehicle
>p : Bool
#^^ source.vehicle
#  ^ source.vehicle keyword.operator.colon.vehicle
#   ^ source.vehicle
#    ^^^^ source.vehicle support.type.bool.vehicle
>p = forall (x : Rat) . (f [x] ! 0) * x > 0
#^^ source.vehicle
#  ^ source.vehicle keyword.operator.define.vehicle
#   ^ source.vehicle
#    ^^^^^^ source.vehicle keyword.control.forall.vehicle
#          ^^^^ source.vehicle
#              ^ source.vehicle keyword.operator.colon.vehicle
#               ^ source.vehicle
#                ^^^ source.vehicle support.type.rat.vehicle
#                   ^^ source.vehicle
#                     ^ source.vehicle keyword.operator.dot.vehicle
#                      ^^^^^^^^ source.vehicle
#                              ^ source.vehicle keyword.operator.lookup.vehicle
#                               ^ source.vehicle
#                                ^ source.vehicle constant.numeric.integral.decimal.vehicle
#                                 ^^ source.vehicle
#                                   ^ source.vehicle keyword.operator.mul.vehicle
#                                    ^^^ source.vehicle
#                                       ^ source.vehicle keyword.operator.gt.vehicle
#                                        ^ source.vehicle
#                                         ^ source.vehicle constant.numeric.integral.decimal.vehicle
>